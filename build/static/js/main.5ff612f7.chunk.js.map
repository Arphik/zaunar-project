{"version":3,"sources":["app/components/header/HeaderMenu.tsx","app/components/header/HaburgerMenu.tsx","app/components/header/Header.tsx","app/components/content/filter/DataOperations.ts","app/components/content/sup-shop/views/LargeBricksView.tsx","app/components/content/sup-shop/views/SmallBricksView.tsx","app/components/content/sup-shop/views/LargeListView.tsx","app/components/content/sup-shop/views/SmallListView.tsx","app/components/content/sup-shop/ItemsList.tsx","app/components/panel/PanelAddProd.tsx","app/components/panel/PanelEditProd.tsx","app/components/panel/PanelProdsList.tsx","app/components/panel/PanelMenu.tsx","app/components/panel/Panel.tsx","app/components/content/sup-shop/cart/Cart.tsx","app/components/content/sup-shop/itemViewTabs.tsx","app/components/content/sup-shop/ItemView.tsx","app/App.tsx","serviceWorker.ts","index.tsx"],"names":["HeaderMenu","className","to","icon","faHeadset","faShoppingCart","HaburgerMenu","params","useParams","console","log","id","type","name","htmlFor","Header","src","alt","placeholder","faSearch","exact","path","DataOperations","url","mod","fetchOpts","this","method","mode","headers","Accept","fetch","response","json","data","item","items","i","length","push","body","JSON","stringify","Headers","error","filterObject","ids","localStorage","getItem","includes","newIdsString","setItem","LargeBricksView","elements","map","index","image","title","price","technology","oar","handle","thickness","width","faBalanceScale","onClick","addToCart","faCartPlus","SmallBricksView","gpumodel","vram","memorytype","connectors","LargeListView","SmallListView","shortStats","faImage","ItemsList","props","changeView","state","view","changeFilteredData","filter","dataOperations","setState","getFullData","then","faRedo","Component","PanelAddProd","updateInput","e","key","currentTarget","document","querySelector","classList","remove","newItem","value","addProduct","a","preventDefault","add","description","qty","sentTime","guarantee","producer","purpose","newInputs","onChange","createInputs","React","PanelEditProd","currItem","changeProduct","editProduct","dataOps","match","PanelProdsList","deleteItem","newItems","String","removeItem","PanelMenu","activeClassName","Panel","component","Cart","removeFromCart","newString","replaceAll","newOrder","order","updateOrderQty","Number","setCart","itemsIDs","split","itemId","getSelectedItems","orderItems","drawCartItems","faTrash","cleanCart","clear","cartItems","updateOrder","makeOrder","itemIds","namesurname","phone","address","payment","shipment","sum","reduce","total","curr","ItemViewInfo","ItemViewTechnicals","technicals","ItemViewOpinions","ItemViewPayment","ItemViewShipment","ItemView","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.5ff612f7.chunk.js","sourcesContent":["import React from 'react';\r\nimport './HeaderMenu.scss';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHeadset, faShoppingCart, faUser, faHeart } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst HeaderMenu: React.FC = () => {\r\n    return (\r\n        <nav className=\"header__menu\">\r\n            <Link to=\"/panel\" className=\"header__link\">\r\n                <div className=\"header__link-content\">\r\n                    <FontAwesomeIcon className=\"header__link--icon\" icon={faHeadset} />\r\n                    <span className=\"header__link--text\">Wsparcie i kontakt</span>\r\n                </div>\r\n            </Link>\r\n            <span className=\"header__separator\"></span>\r\n            {/* <Link to=\"/panel\" className=\"header__link\">\r\n                <div className=\"header__link-content\">\r\n                    <FontAwesomeIcon icon={faUser} />\r\n                    <span className=\"header__link--text\">Twoje konto</span>\r\n                </div>\r\n            </Link> */}\r\n            {/* <Link to=\"\" className=\"header__link\">\r\n                <div className=\"header__link-content\">\r\n                    <FontAwesomeIcon icon={faHeart} />\r\n                    <span className=\"header__link--text\">Twoje listy</span>\r\n                </div>\r\n            </Link> */}\r\n            <Link to=\"/cart\" className=\"header__link\">\r\n                <div className=\"header__link-content\">\r\n                    <FontAwesomeIcon icon={faShoppingCart} />\r\n                    <span className=\"header__link--text\">Koszyk</span>\r\n                </div>\r\n            </Link>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default HeaderMenu;","import React from 'react';\r\nimport {\r\n    NavLink\r\n} from \"react-router-dom\";\r\nimport './HaburgerMenu.scss';\r\nimport { matchPath, useParams } from \"react-router\";\r\n\r\ntype IState = {\r\n    match: {\r\n      isExact: boolean,\r\n      params: {\r\n        id: string\r\n      },\r\n    },\r\n  }\r\n\r\n  \r\nconst HaburgerMenu = () => {\r\n\r\n    const params = useParams();\r\n    console.log('Match', params);\r\n\r\n    return (\r\n        <nav className=\"navbar\">\r\n            <input id=\"navbar__checkbox\" type=\"checkbox\" className=\"navbar__checkbox\" name=\"navbar__checkbox\"/>\r\n            <label htmlFor=\"navbar__checkbox\" className=\"navbar__btn--label\">\r\n                <div className=\"navbar__btn--line\"></div>\r\n            </label>\r\n            <div className=\"navbar__content\">\r\n\r\n                <div className=\"navbar__link\" >\r\n                    <NavLink to=\"/products\" className=\"navbar__link--a\">Produkty</NavLink>\r\n                </div>\r\n                <div className=\"navbar__link\" >\r\n                <NavLink to=\"/blog\" className=\"navbar__link--a\">Blog</NavLink>\r\n                </div>\r\n                <div className=\"navbar__link\" >\r\n                <NavLink to=\"/about\" className=\"navbar__link--a\">O nas</NavLink>\r\n                </div>\r\n                <div className=\"navbar__link\" >\r\n                <NavLink to=\"/contact\" className=\"navbar__link--a\">Kontakt</NavLink>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default HaburgerMenu;","import React from 'react';\r\nimport './Header.scss';\r\nimport HeaderMenu from './HeaderMenu';\r\nimport HaburgerMenu from './HaburgerMenu';\r\nimport {\r\n    Link, Route, Switch\r\n} from \"react-router-dom\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Header: React.FC = () => {\r\n    return (\r\n        <header className=\"header\">\r\n\r\n            <div className=\"header__container1\">\r\n                <Link to=\"/\" className=\"header__logo\">\r\n                    <img src=\"./assets/logo.png\" alt=\"\" className=\"header__logo--img\"/>\r\n                    Akademia Zaunara\r\n                </Link>\r\n\r\n                <div className=\"header__search\">\r\n                    <input type=\"text\" name=\"\" id=\"\" className=\"header__search--input\" placeholder=\"Czego szukasz?\" />\r\n                    <button className=\"header__search--button\"><FontAwesomeIcon icon={faSearch} /></button>\r\n                </div>\r\n\r\n                <HeaderMenu />\r\n\r\n            </div>\r\n\r\n\r\n            <div className=\"header__container2\">\r\n\r\n                <div className=\"header__top-menu\">\r\n                    <Switch>\r\n                        <Route exact path=\"/\">\r\n                            <Link to=\"/sup\" className=\"header__top-menu--link\">\r\n                                <div className=\"header__button--bg header__top-menu--sup\"></div>\r\n                                <span className=\"header__link--span\">\r\n                                    DESKI SUP\r\n                                </span>\r\n                            </Link>\r\n                            <Link to=\"/wood\" className=\"header__top-menu--link header__top-menu--wood\">\r\n                                <div className=\"header__button--bg header__top-menu--wood\"></div>\r\n                                <span className=\"header__link--span\">\r\n                                    WYROBY DREWNIANE\r\n                                </span>\r\n                            </Link>\r\n                        </Route>\r\n                    </Switch>\r\n                    <HaburgerMenu />\r\n                </div>\r\n\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import { IItem, IFilterObject } from '../sup-shop/views/sup.model';\r\n\r\ninterface IDataOperations {\r\n  getFullData(): Promise<IItem[]>;\r\n  getItem(id: string): Promise<IItem>;\r\n  addProduct(data: IItem): void;\r\n  editProduct(data: IItem): void;\r\n  deleteItem(id: string): void;\r\n  getFilteredData(items: IItem[], filterObject?: IFilterObject, ids?: string[]): IItem[];\r\n}\r\n\r\nexport default class DataOperations implements IDataOperations {\r\n  url: string;\r\n  mod: RequestMode;\r\n  fetchOpts: RequestInit;\r\n\r\n  constructor() {\r\n\r\n    this.url = 'https://shop-sup-wood.herokuapp.com/products';\r\n    this.mod = 'cors';\r\n    this.fetchOpts = {\r\n      method: 'GET',\r\n      mode: this.mod,\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n  }\r\n\r\n  async getFullData(): Promise<IItem[]> {\r\n    try {\r\n      const response = await fetch(\r\n        this.url,\r\n        this.fetchOpts,\r\n      );\r\n      const data = await response.json();\r\n      // console.log('Data Ops data:');\r\n      // console.log(data);\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getItem(id: string): Promise<IItem> {\r\n    // console.log(\"DataOps getItem ID \", id);\r\n    try {\r\n      const response = await fetch(\r\n        `${this.url}/${id}`,\r\n        this.fetchOpts,\r\n      );\r\n      const item = await response.json();\r\n      return item;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getSelectedItems(id: string[]): Promise<IItem[]>{\r\n    let items: IItem[] = [];\r\n    for(let i = 0; i < id.length; i++){\r\n      try {\r\n        const response = await fetch(\r\n          `${this.url}/${id[i]}`,\r\n          this.fetchOpts,\r\n        );\r\n        const item: IItem = await response.json();\r\n        items.push(item);\r\n      } catch (error) {\r\n        throw error;\r\n      }\r\n    }\r\n    return items;\r\n  }\r\n\r\n  async addProduct(data: IItem){\r\n\r\n    const mode: RequestMode = 'cors';\r\n\r\n    const fetchOpts = {\r\n        body: JSON.stringify(data),\r\n        method: 'POST',\r\n        mode: mode,\r\n        headers: new Headers({\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Origin': '*'\r\n        }),\r\n    };\r\n    try {\r\n      console.log('Fetch add product ', data);\r\n        const response = await fetch(this.url, fetchOpts);\r\n        console.log('Fetch response ', response.body);\r\n        return response;\r\n    } catch (error) {\r\n        console.log('Fetch error ', error);\r\n    }\r\n  }\r\n\r\n  async editProduct(data: IItem){\r\n\r\n    const mode: RequestMode = 'cors';\r\n    const fetchOpts = {\r\n        body: JSON.stringify(data),\r\n        method: 'UPDATE',\r\n        mode: mode,\r\n        headers: new Headers({\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Origin': '*'\r\n        }),\r\n    };\r\n    try {\r\n        console.log('Fetch edit product ', data);\r\n        const response = await fetch(this.url, fetchOpts);\r\n        console.log('Fetch response ', response.body);\r\n        return response;\r\n    } catch (error) {\r\n        console.log('Fetch error ', error);\r\n    }\r\n  }\r\n\r\n  deleteItem(id: string): Promise<Response> {\r\n    console.log('DataOperations delete ', id);\r\n    const mode: RequestMode = 'cors';\r\n    const fetchOpts = {\r\n      method: 'DELETE',\r\n      mode: mode,\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    try {\r\n      return fetch(`${this.url}/${id}`, fetchOpts);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  getFilteredData(items: IItem[], filterObject?: IFilterObject, ids?: string[]): IItem[] {\r\n      console.log(\"setFilteredData items\", items);\r\n      let newItems: IItem[] = items;\r\n\r\n      \r\n\r\n      // if(filterObject.gpumodel.length){\r\n      //     newItems = items\r\n      //     .filter((item) => filterObject.gpumodel\r\n      //         .find((gpumodel) => gpumodel === item.gpumodel) !== undefined);\r\n      // }\r\n      // if(filterObject.producer.length){\r\n      //     newItems = items\r\n      //     .filter((item) => filterObject.producer\r\n      //         .find((producer) => producer === item.producer) !== undefined);\r\n      // }\r\n      // if(filterObject.memorytype.length){\r\n      //     newItems = items\r\n      //     .filter((item) => filterObject.memorytype\r\n      //         .find((memorytype) => memorytype === item.memorytype) !== undefined);\r\n      // }\r\n      // if(filterObject.vram.length){\r\n      //     newItems = items\r\n      //     .filter((item) => filterObject.vram\r\n      //         .find((vram) => vram === item.vram) !== undefined);\r\n      // }\r\n      return newItems;\r\n  }\r\n  \r\n\r\n  addToCart(id: string, i: number = 0): boolean {\r\n    if(localStorage.getItem('cartItems')?.includes(id)){\r\n      return false;\r\n    }\r\n    else {\r\n      const newIdsString = localStorage.getItem('cartItems')+` ${id}`;\r\n      localStorage.setItem('cartItems', newIdsString);\r\n  \r\n      console.log('localStorage', localStorage.getItem('cartItems'));\r\n      return true;\r\n    }\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport './LargeBricksView.scss';\r\nimport { Link } from \"react-router-dom\";\r\nimport { IItem } from './sup.model';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBalanceScale, faCartPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport DataOperations from '../../filter/DataOperations';\r\n\r\ntype ViewProps = {\r\n  data: IItem[],\r\n}\r\n\r\nconst LargeBricksView = ({ data }: ViewProps): JSX.Element => {\r\n\r\n  const elements = data.map(({ id, image, title, price, type, technology, oar, handle, thickness, length, width }: IItem, index: number) => (\r\n    <div className=\"large-bricks__item\" key={index}>\r\n\r\n      <div className=\"large-bricks__compare\">\r\n        <span className=\"large-bricks__compare--icon\">\r\n          <FontAwesomeIcon icon={faBalanceScale} />\r\n        </span>\r\n      </div>\r\n      <Link to={`sup/${id}`} className=\"larg-bricks__link\">\r\n        <img className=\"large-bricks__image\" src={`./assets/${image}`} alt=\"\" />\r\n      </Link>\r\n\r\n    <span className=\"large-bricks__title\">{title}</span>\r\n\r\n      <div className=\"large-bricks__desc\">\r\n        <div className=\"large-bricks__short-stats\">\r\n          <p className=\"large-bricks__short-stats--p\">Rodzaj: {type}</p>\r\n          <p className=\"large-bricks__short-stats--p\">Technologia: {technology}</p>\r\n          <p className=\"large-bricks__short-stats--p\">Wiosło w zestawie: {oar}</p>\r\n          <p className=\"large-bricks__short-stats--p\">Uchwyt na siedzisko: {handle}</p>\r\n          <p className=\"large-bricks__short-stats--p\">Grubość: {thickness}</p>\r\n          <p className=\"large-bricks__short-stats--p\">Długość: {length}</p>\r\n          <p className=\"large-bricks__short-stats--p\">Szerokość: {width}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"large-bricks__price\"><span>Cena {price} zł</span></div>\r\n\r\n      <span className=\"large-bricks__cart\" onClick={() => new DataOperations().addToCart(id)}><FontAwesomeIcon icon={faCartPlus} /></span>\r\n\r\n    </div>\r\n  ));\r\n  console.log('elements ', elements);\r\n\r\n  return (\r\n    <div className=\"large-bricks\">\r\n      {elements}\r\n    </div>);\r\n}\r\n\r\nexport default LargeBricksView;","import React from 'react';\r\nimport './SmallBricksView.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport { IGpusModel, IItem } from './sup.model';\r\n\r\ntype ViewProps = {\r\n  data: IItem[]\r\n}\r\n\r\nconst SmallBricksView = ({data}: ViewProps): JSX.Element => {\r\n\r\n  const items = data.map(({id, image, title, price, gpumodel, vram, memorytype, connectors}: IItem, index) => (\r\n        <div className=\"small-bricks__item\" key={index}>\r\n\r\n          <div className=\"small-bricks__image--container\">\r\n            <div className=\"small-bricks__checkbox--container\"><input type=\"checkbox\" className=\"small-bricks__checkbox\"/> do porównania</div>\r\n            <Link to={`search/${id}`}><img className=\"small-bricks__image\" src={image} alt=\"\"/></Link>\r\n          </div>\r\n\r\n          <div className=\"small-bricks__short-desc\">\r\n            <Link to=\"./\" className=\"small-bricks__title\">{title}</Link>\r\n            <div className=\"small-bricks__short-stats\">\r\n            <p className=\"large-bricks__short-stats--p\">Układ: {gpumodel}</p>\r\n            <p className=\"large-bricks__short-stats--p\">Pamięć: {vram}</p>\r\n            <p className=\"large-bricks__short-stats--p\">Rodzaj pamięci: {memorytype}</p>\r\n            <p className=\"large-bricks__short-stats--p\">Złącza: {connectors}</p>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"small-bricks__price\">{price} zł</div>\r\n        </div>\r\n  ));\r\n  return (\r\n    <div className=\"small-bricks\">\r\n      {items}\r\n    </div>);\r\n}\r\n  \r\nexport default SmallBricksView;","import React from 'react';\r\nimport './LargeListView.scss';\r\nimport {IItem} from './sup.model';\r\nimport { Link } from 'react-router-dom';\r\n\r\ntype ViewProps = {\r\n  data: IItem[]\r\n}\r\n\r\nconst LargeListView = ({data}: ViewProps): JSX.Element => {\r\n\r\n  const items = data.map(({id, image, title, price, gpumodel, vram, memorytype, connectors}: IItem, index) => (\r\n    <div className=\"large-list__item\" key={index}>\r\n\r\n      <div className=\"large-list__image--container\">\r\n        <Link to={`search/${id}`} className=\"large-list__link\"><img src={image} className=\"large-list__image\" alt=\"\"/></Link>\r\n      </div>\r\n\r\n      <div className=\"large-list__short-desc\">\r\n        <div className=\"large-list__title\"><Link to=\"./\">{title}</Link></div>\r\n        <div className=\"large-list__short-stats\">\r\n            Układ: {gpumodel} Pamięć: {vram} Rodzaj pamięci: {memorytype} Złącza: {connectors}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"large-list__checkbox--container\"><input type=\"checkbox\" className=\"large-list__checkbox\"/> do porównania</div>\r\n\r\n      <div className=\"large-list__price\"><span className=\"large-list__price--span\">{price} zł</span></div>\r\n    </div>\r\n  ));\r\n\r\n  return (\r\n    <div className=\"large-list\">\r\n      {items}\r\n    </div>);\r\n}\r\n\r\nexport default LargeListView;","import React from 'react';\r\nimport './SmallListView.scss';\r\nimport { IGpusModel, IItem } from './sup.model';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faImage } from '@fortawesome/free-regular-svg-icons';\r\nimport { faBalanceScale, faCartPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\ntype ViewProps = {\r\n  data: IItem[]\r\n}\r\n\r\nconst SmallListView = ({data}: ViewProps): JSX.Element => {\r\n  console.log(\"SMALL LIST DATA\", data);\r\n\r\n  const items = data.map(({id, image, title, shortStats, price, gpumodel, vram, memorytype, connectors}: IItem, index) => (\r\n    <Link to={`search/${id}`} className=\"small-list__item\" key={index}>\r\n      <div className=\"small-list__image--container\">\r\n        <FontAwesomeIcon icon={faImage} />\r\n        <img src={image} className=\"small-list__hover-image\" alt=\"\"/>\r\n      </div>\r\n  \r\n      <h5 className=\"small-list__title\">{title}</h5>\r\n\r\n      <span className=\"small-list__short-stats\">{shortStats}</span>\r\n  \r\n      <div className=\"small-list__compare\">\r\n        <span className=\"small-list__compare--icon\">\r\n          <FontAwesomeIcon icon={faBalanceScale}/>\r\n        </span>\r\n      </div>\r\n\r\n      <div className=\"small-list__cart\">\r\n        <span className=\"small-list__cart--icon\">\r\n          <FontAwesomeIcon icon={faCartPlus}/>\r\n        </span>\r\n      </div>\r\n  \r\n  <div className=\"small-list__price\">{price} zł</div>\r\n    </Link>\r\n  ));\r\n  \r\n  return (\r\n    <div className=\"small-list\">\r\n      {items}\r\n    </div>);\r\n}\r\n\r\nexport default SmallListView;\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport Filter from '../filter/Filter';\r\nimport './ItemsList.scss';\r\n\r\nimport LargeBricksView from './views/LargeBricksView';\r\nimport SmallBricksView from './views/SmallBricksView';\r\nimport LargeListView from './views/LargeListView';\r\nimport SmallListView from './views/SmallListView';\r\nimport DataOperations from '../filter/DataOperations';\r\nimport { IItem } from './views/sup.model';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faRedo } from '@fortawesome/free-solid-svg-icons';\r\n\r\ninterface ItemsListState {\r\n  data: IItem[];\r\n  view: number;\r\n  dataOperations: DataOperations;\r\n}\r\n\r\nexport default class ItemsList extends Component<{}, ItemsListState> {\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      view: 0,\r\n      dataOperations: new DataOperations(),\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    this.setState(() => ({ dataOperations: new DataOperations()}));\r\n\r\n    const promisedData = this.state.dataOperations.getFullData();\r\n    promisedData.then((data) => {\r\n\r\n      this.setState(() =>\r\n        ({ data: data })\r\n      );\r\n\r\n    })\r\n  }\r\n\r\n  changeView = (): JSX.Element => {\r\n    const views: JSX.Element[] = [\r\n      <LargeBricksView data={this.state.data} />,\r\n      <SmallBricksView data={this.state.data} />,\r\n      <LargeListView data={this.state.data} />,\r\n      <SmallListView data={this.state.data} />\r\n    ]\r\n    return views[this.state.view];\r\n  }\r\n\r\n  changeFilteredData = (filter: any): void => {\r\n    // let newFilteredData = JSON.parse(JSON.stringify(this.state.data));\r\n    // newFilteredData.items = this.state.dataOps.setFilteredData(this.state.data, filter);\r\n    // this.setState(() => ({filteredData: newFilteredData}));\r\n    //  console.log(\"FILTERED\", this.state.filteredData);\r\n  }\r\n\r\n  render(): JSX.Element {\r\n    console.log('ItemsList data ', this.state.data);\r\n    return (\r\n      <div className=\"shop-content\">\r\n        {/* <Filter data={this.state.data} changeFilteredData={this.changeFilteredData}/> */}\r\n\r\n\r\n        <div className=\"items-list\">\r\n          <div className=\"items-list__change-view--container\">\r\n            <div className=\"items-list__change-view--btn largeBricks\" onClick={() => this.setState(() => ({ view: 0 }))}></div>\r\n            <div className=\"items-list__change-view--btn smallBricks\" onClick={() => this.setState(() => ({ view: 1 }))}></div>\r\n            <div className=\"items-list__change-view--btn largeList\" onClick={() => this.setState(() => ({ view: 2 }))}></div>\r\n            <div className=\"items-list__change-view--btn smallList\" onClick={() => this.setState(() => ({ view: 3 }))}></div>\r\n          </div>\r\n          {/* {this.changeView(this.state.view)} */}\r\n          { \r\n            this.state.data.length > 0 ? \r\n            this.changeView()\r\n            : \r\n            (\r\n              <div className=\"items-list__loading-gif\">\r\n                Loading data\r\n                  <FontAwesomeIcon icon={faRedo} />\r\n              </div>\r\n            ) \r\n          }\r\n          \r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n}","import React from 'react';\r\nimport DataOperations from '../content/filter/DataOperations';\r\nimport { IItem } from '../content/sup-shop/views/sup.model';\r\nimport './PanelAddProd.scss';\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\ninterface IState {\r\n    item: IItem,\r\n}\r\n\r\nexport default class PanelAddProd extends React.Component<IProps, IState>{\r\n\r\n    constructor(props: IProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            item: {\r\n                id: '',\r\n                title: 'TestTitle',\r\n                description: 'TestDescription',\r\n                qty: 10,\r\n                sentTime: 'TestsentTime',\r\n                price: 2300,\r\n                guarantee: 'Testguarantee',\r\n                image: 'Testimage',\r\n                producer: 'Testproducer',\r\n                type: 'Testtype',\r\n                technology: 'Testtechnology',\r\n                purpose: 'Testpurpose',\r\n                oar: 'Testoar',\r\n                handle: 'Testhandle',\r\n                thickness: 'Testthickness',\r\n                length: 'Testlength',\r\n                width: 'Testwidth',\r\n            },\r\n        }\r\n    }\r\n\r\n    componentDidMount() {}\r\n\r\n    createInputs(){\r\n        let newInputs: JSX.Element[] = [];\r\n        let key: string;\r\n        for (key in this.state.item) {\r\n            console.log('Input item[key]', this.state.item[key]);\r\n            newInputs.push(<input type=\"text\" onChange={(e) => this.updateInput(e)}\r\n                key={newInputs.length}\r\n                placeholder={key}\r\n                className={`panel__add-input panel__add--${key}`}\r\n                name={key}\r\n                value={this.state.item[key]} />);\r\n        }\r\n        return newInputs;\r\n    }\r\n\r\n    updateInput = (e: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n\r\n        const key = e.currentTarget.name;\r\n\r\n        document.querySelector(`.panel__add--${key}`)?.classList.remove('required');\r\n\r\n        let newItem: IItem = this.state.item;\r\n        console.log('State item ', key, this.state.item);\r\n        newItem[key] = e.currentTarget.value;\r\n        console.log('newItem ', newItem);\r\n        this.setState(() => ({\r\n            item: newItem\r\n        }));\r\n    }\r\n\r\n    addProduct = async (e: React.FormEvent<HTMLInputElement>) => {\r\n        e.preventDefault();\r\n\r\n        for(const key in this.state.item){\r\n            if(this.state.item[key] === ''){\r\n                document.querySelector(`.panel__add--${key}`)?.classList.add('required');\r\n            }\r\n        }\r\n\r\n        console.log(\"Add product.\");\r\n        const dataOps = new DataOperations();\r\n        dataOps.addProduct(this.state.item);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"panel__add-prod\">\r\n                <div className=\"panel__add-prod--title\">\r\n                    Add product\r\n            </div>\r\n                <form className=\"panel__add-prod--form\">\r\n\r\n                    {this.createInputs()}\r\n                    <input onClick={this.addProduct} type=\"button\" className=\"panel__add-prod--submit panel__add-prod--input\" value=\"Add\" />\r\n\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport DataOperations from '../content/filter/DataOperations';\r\nimport { IItem } from '../content/sup-shop/views/sup.model';\r\nimport './PanelEditProd.scss';\r\n\r\ninterface IProps {\r\n    item: IItem,\r\n    match: {\r\n        isExact: boolean,\r\n        params: {\r\n            id: string\r\n        },\r\n    },\r\n}\r\n\r\ninterface IState {\r\n    currItem: IItem,\r\n}\r\n\r\nexport default class PanelEditProd extends React.Component<IProps, IState>{\r\n\r\n    constructor(props: IProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            currItem: {\r\n                id: 'string',\r\n                title: 'string',\r\n                description: 'string',\r\n                qty: 0,\r\n                sentTime: 'string',\r\n                price: 0,\r\n                guarantee: 'string',\r\n                image: 'string',\r\n                producer: 'string',\r\n                type: 'string',\r\n                technology: 'string',\r\n                purpose: 'string',\r\n                oar: 'string',\r\n                handle: 'string',\r\n                thickness: 'string',\r\n                length: 'string',\r\n                width: 'string',\r\n            },\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const dataOps = new DataOperations();\r\n        const item = await dataOps.getItem(this.props.match.params.id);\r\n        this.setState({ currItem: item });\r\n    }\r\n\r\n    createInputs = (): JSX.Element[] => {\r\n        let newInputs: JSX.Element[] = [];\r\n        let key: string;\r\n        for (key in this.state.currItem) {\r\n            newInputs.push(<input type=\"text\" onChange={(e) => this.updateInput(e)}\r\n                key={newInputs.length}\r\n                placeholder={key}\r\n                className={`panel__edit-input panel__add--${key}`}\r\n                name={key}\r\n                value={this.state.currItem[key]} />);\r\n        }\r\n        return newInputs;\r\n    }\r\n\r\n    updateInput = (e: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n\r\n        const key = e.currentTarget.name;\r\n\r\n        document.querySelector(`.panel__add--${key}`)?.classList.remove('required');\r\n\r\n        let newItem: IItem = this.state.currItem;\r\n        console.log('State item ', key, this.state.currItem);\r\n        newItem[key] = e.currentTarget.value;\r\n        console.log('newItem ', newItem);\r\n        this.setState(() => ({\r\n            currItem: newItem\r\n        }));\r\n    }\r\n\r\n    changeProduct = async (e: React.FormEvent<HTMLInputElement>) => {\r\n        e.preventDefault();\r\n        const newItem: IItem = { ...this.state.currItem };\r\n        const dataOps = new DataOperations();\r\n        dataOps.editProduct(newItem);\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.state.currItem);\r\n        return (\r\n            <div className=\"panel__edit-prod\">\r\n                <div className=\"panel__edit-prod--title\">\r\n                    Edit product\r\n            </div>\r\n                <form className=\"panel__edit-prod--form\">\r\n\r\n                    {this.createInputs()}\r\n\r\n                    {/* <input onChange={this.updateInput} name=\"name\" value={this.state.currItem.title} type=\"text\" className=\"panel__add-prod--name panel__add-prod--input\" placeholder=\"Name\" />\r\n                    <textarea onChange={this.updateInput} name=\"description\" value={this.state.currItem.description} className=\"panel__add-prod--desc panel__add-prod--input\" rows={4} placeholder=\"Description\"></textarea>\r\n                    <input onChange={this.updateInput} name=\"shortStats\" value={this.state.currItem.shortStats} type=\"text\" className=\"panel__add-prod--short-stats panel__add-prod--input\" placeholder=\"Short stats\" />\r\n                    <input onChange={this.updateInput} name=\"vram\" value={this.state.currItem.vram} type=\"text\" className=\"panel__add-prod--vram panel__add-prod--input\" placeholder=\"Vram\" />\r\n                    <input onChange={this.updateInput} name=\"image\" value={this.state.currItem.image} type=\"text\" className=\"panel__add-prod--image panel__add-prod--input\" placeholder=\"Image\" />\r\n                    <input onChange={this.updateInput} name=\"model\" value={this.state.currItem.gpumodel} type=\"text\" className=\"panel__add-prod--model panel__add-prod--input\" placeholder=\"Model\" />\r\n                    <input onChange={this.updateInput} name=\"producer\" value={this.state.currItem.producer} type=\"text\" className=\"panel__add-prod--producer panel__add-prod--input\" placeholder=\"Producer\" />\r\n                    <input onChange={this.updateInput} name=\"memorytype\" value={this.state.currItem.memorytype} type=\"text\" className=\"panel__add-prod--memorytype panel__add-prod--input\" placeholder=\"Memory type\" />\r\n                    <input onChange={this.updateInput} name=\"connectors\" value={this.state.currItem.connectors} type=\"text\" className=\"panel__add-prod--connectors panel__add-prod--input\" placeholder=\"Connectors\" />\r\n                    <input onChange={this.updateInput} name=\"shortStats\" value={this.state.currItem.shortStats} type=\"text\" className=\"panel__add-prod--price panel__add-prod--input\" placeholder=\"Price\" /> */}\r\n\r\n                    <input onClick={this.changeProduct} type=\"button\" className=\"panel__edit-prod--submit panel__edit-prod--input\" value=\"Change\" />\r\n\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport DataOperations from '../content/filter/DataOperations';\r\nimport { IItem } from '../content/sup-shop/views/sup.model';\r\nimport './PanelProdsList.scss';\r\n\r\ninterface IProps { }\r\n\r\ninterface IState {\r\n    items: JSX.Element[],\r\n    dataOps: DataOperations,\r\n}\r\n\r\nexport default class PanelProdsList extends React.Component<IProps, IState>{\r\n\r\n    constructor(props: IProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            items: [],\r\n            dataOps: new DataOperations()\r\n        }\r\n    }\r\n\r\n    removeItem(id: string, index: number){\r\n        const dataOps = new DataOperations();\r\n        dataOps.deleteItem(id)\r\n        .then((response) => {\r\n            console.log('response', response);\r\n            const newItems = this.state.items.filter(({key}) => key !== String(index))\r\n            this.setState({ items: newItems });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.state.dataOps.getFullData()\r\n            .then((data) => this.setState(() => ({\r\n                items: data.map(({ id, title, description, price }, index) => (\r\n                    <div className=\"panel__prods-list--item\" key={index}>\r\n                        <span className=\"panel__prods-list--title\">{title}</span>\r\n                        <span className=\"panel__prods-list--description\">{description}</span>\r\n                        <span className=\"panel__prods-list--price\">{price}</span>\r\n                        <Link to={`/panel/edit/${id}`} className=\"panel__prods-list--edit\">Edit</Link>\r\n                        <span className=\"panel__prods-list--delete\" onClick={() => this.removeItem(id, index)}>Del</span>\r\n                    </div>\r\n                ))\r\n            })));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"panel__prods-list\">\r\n                {this.state.items}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './PanelMenu.scss';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst PanelMenu = () => {\r\n    return (\r\n        <nav className=\"panel__menu\">\r\n        <NavLink to=\"/panel/list\" className=\"panel__link\" activeClassName=\"active\">Products list</NavLink>\r\n            <NavLink to=\"/panel/add\" className=\"panel__link\" activeClassName=\"active\">Add product</NavLink>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default PanelMenu;","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport './Panel.scss';\r\nimport PanelAddProd from './PanelAddProd';\r\nimport PanelEditProd from './PanelEditProd';\r\nimport PanelProdsList from './PanelProdsList';\r\n\r\nimport PanelMenu from './PanelMenu';\r\n\r\nexport const Panel = () => {\r\n    return (\r\n        <section className=\"panel\">\r\n            <PanelMenu/>\r\n\r\n            <Switch>\r\n                <Route path=\"/panel/list\" component={PanelProdsList}/>\r\n                <Route path=\"/panel/add\" component={PanelAddProd}/>\r\n                <Route path=\"/panel/edit/:id\" component={PanelEditProd}/>\r\n            </Switch>\r\n        </section>\r\n    )\r\n}\r\nexport default Panel;","import React, { Component, InputHTMLAttributes } from 'react';\r\nimport './Cart.scss';\r\nimport DataOperations from '../../filter/DataOperations';\r\nimport { IItem } from '../views/sup.model';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\ninterface IState {\r\n    itemIds: string[],\r\n    cartItems: JSX.Element[],\r\n    order: Order,\r\n}\r\n\r\ninterface OrderItem{\r\n    id: string,\r\n    title: string,\r\n    description: string,\r\n    qty: number,\r\n    price: number,\r\n}\r\n\r\ninterface Order {\r\n    namesurname: string,\r\n    phone: string,\r\n    address: string,\r\n    payment: string,\r\n    shipment: string,\r\n    items: OrderItem[],\r\n    sum: number,\r\n    [key: string]: string | object[] | number,\r\n}\r\n\r\nexport default class Cart extends Component<IProps, IState> {\r\n\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.state = {\r\n            itemIds: [],\r\n            cartItems: [],\r\n            order: {\r\n                namesurname: '',\r\n                phone: '',\r\n                address: '',\r\n                payment: '',\r\n                shipment: '',\r\n                items: [],\r\n                sum: 0,\r\n            }\r\n        }\r\n        console.log('localstorage', localStorage.getItem('cartItems'));\r\n    }\r\n\r\n    removeFromCart = (id: string) => {\r\n        const newString: any = localStorage.getItem('cartItems')?.replaceAll(id, '');\r\n        localStorage.setItem('cartItems', newString);\r\n        let newOrder: Order = this.state.order;\r\n        newOrder.items = newOrder.items.filter((item) => item.id !== id);\r\n        this.setState({ order: newOrder});\r\n    }\r\n\r\n    updateOrderQty = (index: number, e: React.FormEvent<HTMLInputElement>) => {\r\n        let newOrder = this.state.order;\r\n        newOrder.items[index].qty = Number(e.currentTarget.value);\r\n        this.setState({ order: newOrder });\r\n    }\r\n\r\n    setCart = async () => {\r\n        const dataOps = new DataOperations();\r\n        const itemsIDs: any = localStorage.getItem('cartItems')?.split(' ')\r\n        .filter((itemId) => \r\n            (itemId.length < 2 || itemId.includes('null') ? false : true\r\n        ));\r\n        // .map((id) => dataOps.getItem(id));\r\n        const orderItems: IItem[] = await dataOps.getSelectedItems(itemsIDs);\r\n        const newOrder = this.state.order;\r\n        orderItems.map(item => newOrder.items.push({id: item.id, title: item.title, description: item.description, qty: 1, price: item.price}));\r\n        console.log('newOrder.items', dataOps.getSelectedItems(itemsIDs));\r\n        this.setState({ order: newOrder });\r\n\r\n    }\r\n\r\n    drawCartItems = (): JSX.Element[] => {\r\n        console.log('Draw order items');\r\n        return this.state.order.items.map(({ id, title, price, description }, index) =>\r\n            (\r\n                <div className=\"cart__item\" key={index}>\r\n                    <span className=\"cart__title\">{title}</span>\r\n                    <span className=\"cart__price\">{price} zł</span>\r\n                    Ilość: <input type=\"text\" onChange={(e) => this.updateOrderQty(index, e)} value={this.state.order.items[index].qty} name=\"\" id=\"\" className=\"cart__qty\" />\r\n                    <span className=\"cart__remove\" onClick={() => this.removeFromCart(id)}><FontAwesomeIcon icon={faTrash} /></span>\r\n                    <span className=\"cart__description\">{description}</span>\r\n                </div>\r\n            ));\r\n    }\r\n\r\n    cleanCart = () => {\r\n        localStorage.clear();\r\n        this.setState(() => ({ cartItems: [] }));\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.setCart();\r\n    }\r\n\r\n    updateOrder = (e: React.FormEvent<HTMLInputElement>) => {\r\n        let newOrder: Order = { ...this.state.order };\r\n        newOrder[e.currentTarget.name] = e.currentTarget.value;\r\n        this.setState({ order: newOrder });\r\n        // console.clear();\r\n        // console.log('Imię nazwisko telefon', this.state.order.namesurname, this.state.order.phone);\r\n        // console.log('Adres:', this.state.order.address);\r\n        // console.log('Metody:', this.state.order.payment, this.state.order.shipment);\r\n    }\r\n\r\n    makeOrder = () => {\r\n\r\n    }\r\n\r\n    render() {\r\n        const sum = this.state.order.items.reduce((total, curr,) => total + (curr.qty * curr.price), 0);\r\n        return (\r\n            <div className=\"cart\" >\r\n                {this.state.order.items.length > 0 ?\r\n\r\n                    (<div className=\"cart__container\">\r\n                        <span className=\"cart__remove-all\" onClick={() => this.cleanCart()}>Wyczyść koszyk</span>\r\n\r\n                        <div className=\"cart__items\">\r\n                            {this.drawCartItems()}\r\n                        </div>\r\n\r\n                        <div className=\"cart__customer\">\r\n                            <div className=\"cart__customer--data\">\r\n                                <div className=\"cart__order--title\">Dane odbiorcy:</div>\r\n                                <input type=\"text\" onChange={(e) => this.updateOrder(e)} className=\"cart__order--name cart__customer--input\" name=\"namesurname\" id=\"\" placeholder=\"Imię i nazwisko\" />\r\n                                <input type=\"text\" onChange={(e) => this.updateOrder(e)} className=\"cart__order--phone cart__customer--input\" name=\"phone\" id=\"\" placeholder=\"Telefon\" />\r\n                                <input type=\"text\" onChange={(e) => this.updateOrder(e)} className=\"cart__order--address cart__customer--input\" name=\"address\" id=\"\" placeholder=\"Adres\" />\r\n                            </div>\r\n                            <div className=\"cart__order--payment\">\r\n                                <div className=\"cart__order--title\">Metoda płatności:</div>\r\n                                <div className=\"cart__order--radio\">\r\n                                    <input type=\"radio\" onChange={(e) => this.updateOrder(e)} name=\"payment\" value=\"przelew\" id=\"\" className=\"cart__order--payment\" />Przelew\r\n                                    <input type=\"radio\" onChange={(e) => this.updateOrder(e)} name=\"payment\" value=\"paypal\" id=\"\" className=\"cart__order--payment\" />Paypal\r\n                                    <input type=\"radio\" onChange={(e) => this.updateOrder(e)} name=\"payment\" value=\"przyodbiorze\" id=\"\" className=\"cart__order--payment\" />Przy odbiorze\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"cart__order--shipment\">\r\n                                <div className=\"cart__order--title\">Sposób dostawy:</div>\r\n                                <div className=\"cart__order--radio\">\r\n                                    <input type=\"radio\" onChange={(e) => this.updateOrder(e)} name=\"shipment\" value=\"kurier\" id=\"\" className=\"cart__order--payment\" />Kurier\r\n                                    <input type=\"radio\" onChange={(e) => this.updateOrder(e)} name=\"shipment\" value=\"poczta\" id=\"\" className=\"cart__order--payment\" />Poczta Polska\r\n                                    <input type=\"radio\" onChange={(e) => this.updateOrder(e)} name=\"shipment\" value=\"paczkomat\" id=\"\" className=\"cart__order--payment\" />Paczkomat\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className=\"cart__summary\">\r\n                            Suma: {sum} zł\r\n                            <div className=\"cart__order--btn\">Złóż zamówienie</div>\r\n                        </div>\r\n                    </div>\r\n                    )\r\n                    :\r\n                    (<span className=\"cart__empty\" onClick={() => console.log(this.state.order.items)}>Your cart is empty</span>)\r\n                }\r\n\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\ntype TProps = {\r\n    technicals: {\r\n        type: string,\r\n        technology: string,\r\n        oar: string,\r\n        handle: string,\r\n        thickness: string,\r\n        length: string,\r\n        width: string,\r\n    }\r\n}\r\n\r\ntype DProps = {\r\n    description: string\r\n}\r\n\r\ntype SProps = {\r\n    shipment: string\r\n}\r\n\r\nexport const ItemViewInfo = ({ description }: DProps) => {\r\n\r\n    return (\r\n        <div className=\"item-view__tab--info item-view__tab\">\r\n            {description}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const ItemViewTechnicals = ({technicals}: TProps) => {\r\n\r\n    return (\r\n        <div className=\"item-view__tab--technicals item-view__tab\">\r\n            <div className=\"item-view__short-stats--div\">\r\n                <span className=\"short-stats--title\">Rodzaj:</span>\r\n                <span className=\"short-stats--info\">{technicals.type}</span>\r\n            </div>\r\n            <div className=\"item-view__short-stats--div\">\r\n                <span className=\"short-stats--title\">Technologia:</span>\r\n                <span className=\"short-stats--info\">{technicals.technology}</span>\r\n            </div>\r\n            <div className=\"item-view__short-stats--div\">\r\n                <span className=\"short-stats--title\">Wiosło w zestawie:</span>\r\n                <span className=\"short-stats--info\">{technicals.oar}</span>\r\n            </div>\r\n            <div className=\"item-view__short-stats--div\">\r\n                <span className=\"short-stats--title\">Uchwyt na siedzisko:</span>\r\n                <span className=\"short-stats--info\">{technicals.handle}</span>\r\n            </div>\r\n            <div className=\"item-view__short-stats--div\">\r\n                <span className=\"short-stats--title\">Grubość:</span>\r\n                <span className=\"short-stats--info\">{technicals.thickness}</span>\r\n            </div>\r\n            <div className=\"item-view__short-stats--div\">\r\n                <span className=\"short-stats--title\">Długość:</span>\r\n                <span className=\"short-stats--info\">{technicals.length}</span>\r\n            </div>\r\n            <div className=\"item-view__short-stats--div\">\r\n                <span className=\"short-stats--title\">Szerokość:</span>\r\n                <span className=\"short-stats--info\">{technicals.width}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport const ItemViewOpinions = () => {\r\n\r\n    return (\r\n        <div className=\"item-view__tab--opinions item-view__tab\">\r\n            ItemViewOpinions\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport const ItemViewPayment = () => {\r\n\r\n    return (\r\n        <div className=\"item-view__tab--payment item-view__tab\">\r\n            ItemViewPayment\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport const ItemViewShipment = ({ shipment}: SProps) => {\r\n\r\n    return (\r\n        <div className=\"item-view__tab--shipment item-view__tab\">\r\n            {shipment}\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from 'react';\r\nimport './ItemView.scss';\r\nimport { Link, NavLink, Route, Switch } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBalanceScale, faCartPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport DataOperations from '../filter/DataOperations';\r\nimport { IItem } from './views/sup.model';\r\nimport { ItemViewInfo, ItemViewOpinions, ItemViewPayment, ItemViewShipment, ItemViewTechnicals } from './itemViewTabs';\r\n\r\ninterface IProps {\r\n  _id: string,\r\n  match: {\r\n    isExact: boolean,\r\n    params: {\r\n      id: string\r\n    },\r\n  },\r\n}\r\n\r\ninterface IState {\r\n  item: IItem\r\n}\r\n\r\nexport default class ItemView extends Component<IProps, IState> {\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      item: {\r\n        id: '',\r\n        title: '',\r\n        description: '',\r\n        qty: 0,\r\n        sentTime: '',\r\n        price: 0,\r\n        guarantee: '',\r\n        image: '',\r\n        producer: '',\r\n        type: '',\r\n        technology: '',\r\n        purpose: '',\r\n        oar: '',\r\n        handle: '',\r\n        thickness: '',\r\n        length: '',\r\n        width: '',\r\n      }\r\n    }\r\n    // console.log(\"didMount data \", this.state.data);\r\n  }\r\n  componentDidMount() {\r\n\r\n    console.log(\"match\", this.props.match);\r\n\r\n    const dataOps = new DataOperations();\r\n\r\n    const promisedItem = dataOps.getItem(this.props.match.params.id);\r\n    promisedItem.then((item) => {\r\n\r\n      this.setState(() =>\r\n        ({ item: item })\r\n      );\r\n\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"item-view\">\r\n\r\n        <div className=\"item-view__compare\">\r\n          <span className=\"item-view__compare--icon\">\r\n            <FontAwesomeIcon icon={faBalanceScale} />\r\n          </span>\r\n        </div>\r\n\r\n        <img className=\"item-view__image\" src={`./assets/${this.state.item.image}`} alt=\"\" />\r\n\r\n        <div className=\"item-view__short-stats\">\r\n\r\n          <p className=\"item-view__title\">{this.state.item.title}</p>\r\n\r\n          <p className=\"item-view__desc\">{this.state.item.description}</p>\r\n\r\n          <div className=\"item-view__short-stats--div\">\r\n            <div className=\"item-view__price\"><span>Cena {this.state.item.price} zł</span></div>\r\n          </div>\r\n\r\n          <div className=\"item-view__short-stats--div\">\r\n            <span className=\"item-view__cart--icon\" onClick={() => new DataOperations().addToCart(this.state.item.id)}><FontAwesomeIcon icon={faCartPlus} /></span><span className=\"item-view__cart--title\">Zarezerwuj</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"item-view__fullinfo\">\r\n\r\n          <div className=\"item-view__infotabs\">\r\n            <NavLink to={`/sup/${this.state.item.id}/info`} className=\"item-view__infotab\" activeClassName=\"item-view__infotab--active\">OPIS PRODUKTU</NavLink>\r\n            <NavLink to={`/sup/${this.state.item.id}/technicals`} className=\"item-view__infotab\" activeClassName=\"item-view__infotab--active\">DANE TECHNICZNE</NavLink>\r\n            <NavLink to={`/sup/${this.state.item.id}/opinions`} className=\"item-view__infotab\" activeClassName=\"item-view__infotab--active\">OPINIE KLIENTÓW</NavLink>\r\n            <NavLink to={`/sup/${this.state.item.id}/payment`} className=\"item-view__infotab\" activeClassName=\"item-view__infotab--active\">PŁATNOŚCI</NavLink>\r\n            <NavLink to={`/sup/${this.state.item.id}/shipment`} className=\"item-view__infotab\" activeClassName=\"item-view__infotab--active\">WYSYŁKA</NavLink>\r\n          </div>\r\n\r\n          <div className=\"item-view__infotab--content\">\r\n\r\n            <Switch>\r\n\r\n              <Route exact path=\"/sup/:id/info\">\r\n                <ItemViewInfo description={this.state.item.description}/>\r\n              </Route>\r\n\r\n              <Route path=\"/sup/:id/technicals\">\r\n                <ItemViewTechnicals technicals={{\r\n                  type: this.state.item.type,\r\n                  technology: this.state.item.technology,\r\n                  oar: this.state.item.oar,\r\n                  handle: this.state.item.handle,\r\n                  thickness: this.state.item.thickness,\r\n                  length: this.state.item.length,\r\n                  width: this.state.item.width,\r\n                }}/>\r\n              </Route>\r\n              <Route path=\"/sup/:id/opinions\">\r\n                <ItemViewOpinions/>\r\n              </Route>\r\n              <Route path=\"/sup/:id/payment\">\r\n                <ItemViewPayment/>\r\n              </Route>\r\n              <Route path=\"/sup/:id/shipment\">\r\n                <ItemViewShipment shipment={this.state.item.sentTime}/>\r\n              </Route>\r\n              \r\n            </Switch>\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>);\r\n  }\r\n}","import React from 'react';\r\nimport './App.scss';\r\n\r\nimport Header from './components/header/Header';\r\nimport Promotions from './components/content/promotions/Promotions';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  useParams\r\n} from \"react-router-dom\";\r\nimport ItemsList from './components/content/sup-shop/ItemsList';\r\nimport Panel from './components/panel/Panel';\r\nimport Cart from './components/content/sup-shop/cart/Cart';\r\nimport ItemView from './components/content/sup-shop/ItemView';\r\n\r\ninterface IParams{\r\n  params: {\r\n    id: number;\r\n  }\r\n}\r\n\r\nconst App: React.FC = () => {\r\n\r\n  return (\r\n      <div className=\"App\">\r\n            <Header/> \r\n\r\n            <main className=\"app__content\">\r\n              <div className=\"gray-cover\"></div>\r\n              <Switch>\r\n                <Route path=\"/sup\" exact component={ItemsList}/>\r\n                <Route path=\"/sup/:id\" component={ItemView} />\r\n                <Route path=\"/panel\" component={Panel}/>\r\n                <Route path=\"/cart\" component={Cart}/>\r\n              </Switch>\r\n                {/* <Route path=\"/\">\r\n                  <Promotions/>\r\n                </Route>\r\n                <Route path=\"/\">\r\n                  <ItemsList/>\r\n                </Route>\r\n                <Route path=\"/panel\">\r\n                  <Panel/>\r\n                </Route> */}\r\n            </main>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <HashRouter>\n        <App />\n      </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}