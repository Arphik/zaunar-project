{"version":3,"sources":["app/components/header/HeaderMenu.tsx","app/components/header/HaburgerMenu.tsx","app/components/header/Header.tsx","app/components/content/filter/DataOperations.ts","app/components/content/sup-shop/views/LargeBricksView.tsx","app/components/content/sup-shop/views/SmallBricksView.tsx","app/components/content/sup-shop/views/LargeListView.tsx","app/components/content/sup-shop/views/SmallListView.tsx","app/components/content/sup-shop/ItemsList.tsx","app/components/panel/PanelAddProd.tsx","app/components/panel/PanelEditProd.tsx","app/components/panel/PanelProdsList.tsx","app/components/panel/PanelMenu.tsx","app/components/panel/Panel.tsx","app/components/content/sup-shop/cart/Cart.tsx","app/components/content/sup-shop/itemViewTabs.tsx","app/components/content/sup-shop/ItemView.tsx","app/App.tsx","serviceWorker.ts","index.tsx"],"names":["HeaderMenu","className","to","icon","faHeadset","faShoppingCart","HaburgerMenu","id","type","name","htmlFor","Header","src","alt","placeholder","faSearch","DataOperations","mod","fetchOpts","this","method","mode","headers","Accept","fetch","response","json","data","item","body","JSON","stringify","Headers","console","log","error","items","filterObject","ids","localStorage","getItem","includes","newIdsString","setItem","LargeBricksView","elements","map","index","image","title","price","technology","oar","handle","thickness","length","width","faBalanceScale","onClick","addToCart","faCartPlus","SmallBricksView","LargeListView","SmallListView","ItemsList","props","changeView","choice","newView","state","changeFilteredData","filter","view","dataOperations","setState","getFullData","then","Component","PanelAddProd","updateInput","e","key","currentTarget","document","querySelector","classList","remove","newItem","value","addProduct","a","preventDefault","add","description","qty","sentTime","guarantee","producer","purpose","newInputs","push","onChange","createInputs","React","PanelEditProd","currItem","changeProduct","editProduct","dataOps","match","params","PanelProdsList","deleteItem","newItems","String","removeItem","PanelMenu","activeClassName","Panel","path","component","Cart","setCartItems","split","itemId","newCartItems","removeFromCart","cartItems","itemIds","newString","replaceAll","clear","cleanCart","ItemViewInfo","ItemViewTechnicals","technicals","ItemViewOpinions","ItemViewPayment","ItemViewShipment","shipment","ItemView","exact","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.2b380956.chunk.js","sourcesContent":["import React from 'react';\r\nimport './HeaderMenu.scss';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHeadset, faShoppingCart, faUser, faHeart } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst HeaderMenu: React.FC = () => {\r\n    return (\r\n        <nav className=\"header__menu\">\r\n            <Link to=\"/panel\" className=\"header__link\">\r\n                <div className=\"header__link-content\">\r\n                    <FontAwesomeIcon className=\"header__link--icon\" icon={faHeadset} />\r\n                    <span className=\"header__link--text\">Support and contact</span>\r\n                </div>\r\n            </Link>\r\n            <span className=\"header__separator\"></span>\r\n            {/* <Link to=\"/panel\" className=\"header__link\">\r\n                <div className=\"header__link-content\">\r\n                    <FontAwesomeIcon icon={faUser} />\r\n                    <span className=\"header__link--text\">Twoje konto</span>\r\n                </div>\r\n            </Link> */}\r\n            {/* <Link to=\"\" className=\"header__link\">\r\n                <div className=\"header__link-content\">\r\n                    <FontAwesomeIcon icon={faHeart} />\r\n                    <span className=\"header__link--text\">Twoje listy</span>\r\n                </div>\r\n            </Link> */}\r\n            <Link to=\"/cart\" className=\"header__link\">\r\n                <div className=\"header__link-content\">\r\n                    <FontAwesomeIcon icon={faShoppingCart} />\r\n                    <span className=\"header__link--text\">Cart</span>\r\n                </div>\r\n            </Link>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default HeaderMenu;","import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Link\r\n} from \"react-router-dom\";\r\nimport './HaburgerMenu.scss';\r\n\r\nconst HaburgerMenu = () => {\r\n\r\n    // console.log(Menu);\r\n\r\n    return (\r\n        <nav className=\"navbar\">\r\n            <input id=\"navbar__checkbox\" type=\"checkbox\" className=\"navbar__checkbox\" name=\"navbar__checkbox\"/>\r\n            <label htmlFor=\"navbar__checkbox\" className=\"navbar__btn--label\">\r\n                <div className=\"navbar__btn--line\"></div>\r\n            </label>\r\n            <div className=\"navbar__content\">\r\n\r\n                <div className=\"navbar__link\" >\r\n                    <Link to=\"/products\" className=\"navbar__link--a\">Products</Link>\r\n                </div>\r\n                <div className=\"navbar__link\" >\r\n                <Link to=\"/blog\" className=\"navbar__link--a\">Blog</Link>\r\n                </div>\r\n                <div className=\"navbar__link\" >\r\n                <Link to=\"/about\" className=\"navbar__link--a\">About</Link>\r\n                </div>\r\n                <div className=\"navbar__link\" >\r\n                <Link to=\"/contact\" className=\"navbar__link--a\">Contact</Link>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default HaburgerMenu;","import React from 'react';\r\nimport './Header.scss';\r\nimport HeaderMenu from './HeaderMenu';\r\nimport HaburgerMenu from './HaburgerMenu';\r\nimport {\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst Header: React.FC = () => {\r\n    return (\r\n        <header className=\"header\">\r\n\r\n            <div className=\"header__container1\">\r\n                <Link to=\"/\" className=\"header__logo\">\r\n                    <img src=\"./assets/logo.png\" alt=\"\" className=\"header__logo--img\"/>\r\n                    Akademia Zaunara\r\n                </Link>\r\n\r\n                <div className=\"header__search\">\r\n                    <input type=\"text\" name=\"\" id=\"\" className=\"header__search--input\" placeholder=\"What are you searching?\" />\r\n                    <button className=\"header__search--button\"><FontAwesomeIcon icon={faSearch} /></button>\r\n                </div>\r\n\r\n                <HeaderMenu />\r\n\r\n            </div>\r\n\r\n\r\n            <div className=\"header__container2\">\r\n\r\n                <div className=\"header__top-menu\">\r\n                    <Link to=\"/sup\" className=\"header__top-menu--link\">\r\n                        <span className=\"header__top-menu--a\">\r\n                            SUP SHOP\r\n                        </span>\r\n                    </Link>\r\n                    <Link to=\"/wood\" className=\"header__top-menu--link\">\r\n                        <span className=\"header__top-menu--a\">\r\n                            WOODEN HANDMADES\r\n                        </span>\r\n                    </Link>\r\n                    <HaburgerMenu />\r\n                </div>\r\n\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import { IItem, IFilterObject } from '../sup-shop/views/sup.model';\r\n\r\ninterface IDataOperations {\r\n  getFullData(): Promise<IItem[]>;\r\n  getItem(id: string): Promise<IItem>;\r\n  addProduct(data: IItem): void;\r\n  editProduct(data: IItem): void;\r\n  deleteItem(id: string): void;\r\n  getFilteredData(items: IItem[], filterObject?: IFilterObject, ids?: string[]): IItem[];\r\n}\r\n\r\nexport default class DataOperations implements IDataOperations {\r\n  mod: RequestMode;\r\n  fetchOpts: RequestInit;\r\n\r\n  constructor() {\r\n    \r\n    this.mod = 'cors';\r\n    this.fetchOpts = {\r\n      method: 'GET',\r\n      mode: this.mod,\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n  }\r\n\r\n  async getFullData(): Promise<IItem[]> {\r\n    try {\r\n      const response = await fetch(\r\n        'http://localhost:3000/products',\r\n        this.fetchOpts,\r\n      );\r\n      const data = await response.json();\r\n      // console.log('Data Ops data:');\r\n      // console.log(data);\r\n      return data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getItem(id: string): Promise<IItem> {\r\n    // console.log(\"DataOps getItem ID \", id);\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:3000/products/${id}`,\r\n        this.fetchOpts,\r\n      );\r\n      const item = await response.json();\r\n      return item;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async addProduct(data: IItem){\r\n\r\n    const url = 'http://localhost:3000/products';\r\n\r\n    const mode: RequestMode = 'cors';\r\n\r\n    const fetchOpts = {\r\n        body: JSON.stringify(data),\r\n        method: 'POST',\r\n        mode: mode,\r\n        headers: new Headers({\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Origin': '*'\r\n        }),\r\n    };\r\n    try {\r\n      console.log('Fetch add product ', data);\r\n        const response = await fetch(url, fetchOpts);\r\n        console.log('Fetch response ', response.body);\r\n        return response;\r\n    } catch (error) {\r\n        console.log('Fetch error ', error);\r\n    }\r\n  }\r\n\r\n  async editProduct(data: IItem){\r\n\r\n    const url = 'http://localhost:3000/products';\r\n\r\n    const mode: RequestMode = 'cors';\r\n    const fetchOpts = {\r\n        body: JSON.stringify(data),\r\n        method: 'UPDATE',\r\n        mode: mode,\r\n        headers: new Headers({\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json',\r\n            'Access-Control-Allow-Origin': '*'\r\n        }),\r\n    };\r\n    try {\r\n        console.log('Fetch edit product ', data);\r\n        const response = await fetch(url, fetchOpts);\r\n        console.log('Fetch response ', response.body);\r\n        return response;\r\n    } catch (error) {\r\n        console.log('Fetch error ', error);\r\n    }\r\n  }\r\n\r\n  deleteItem(id: string): Promise<Response> {\r\n    console.log('DataOperations delete ', id);\r\n    const mode: RequestMode = 'cors';\r\n    const fetchOpts = {\r\n      method: 'DELETE',\r\n      mode: mode,\r\n      headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'application/json',\r\n      },\r\n    };\r\n\r\n    try {\r\n      return fetch(`http://localhost:3000/products/${id}`, fetchOpts);\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  getFilteredData(items: IItem[], filterObject?: IFilterObject, ids?: string[]): IItem[] {\r\n      console.log(\"setFilteredData items\", items);\r\n      let newItems: IItem[] = items;\r\n\r\n      \r\n\r\n      // if(filterObject.gpumodel.length){\r\n      //     newItems = items\r\n      //     .filter((item) => filterObject.gpumodel\r\n      //         .find((gpumodel) => gpumodel === item.gpumodel) !== undefined);\r\n      // }\r\n      // if(filterObject.producer.length){\r\n      //     newItems = items\r\n      //     .filter((item) => filterObject.producer\r\n      //         .find((producer) => producer === item.producer) !== undefined);\r\n      // }\r\n      // if(filterObject.memorytype.length){\r\n      //     newItems = items\r\n      //     .filter((item) => filterObject.memorytype\r\n      //         .find((memorytype) => memorytype === item.memorytype) !== undefined);\r\n      // }\r\n      // if(filterObject.vram.length){\r\n      //     newItems = items\r\n      //     .filter((item) => filterObject.vram\r\n      //         .find((vram) => vram === item.vram) !== undefined);\r\n      // }\r\n      return newItems;\r\n  }\r\n  \r\n\r\n  addToCart(id: string, i: number = 0): boolean {\r\n    if(localStorage.getItem('cartItems')?.includes(id)){\r\n      return false;\r\n    }\r\n    else {\r\n      const newIdsString = localStorage.getItem('cartItems')+` ${id}`;\r\n      localStorage.setItem('cartItems', newIdsString);\r\n  \r\n      console.log('localStorage', localStorage.getItem('cartItems'));\r\n      return true;\r\n    }\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport './LargeBricksView.scss';\r\nimport { Link } from \"react-router-dom\";\r\nimport { IItem } from './sup.model';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBalanceScale, faCartPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport DataOperations from '../../filter/DataOperations';\r\n\r\ntype ViewProps = {\r\n  data: IItem[],\r\n}\r\n\r\nconst LargeBricksView = ({ data }: ViewProps): JSX.Element => {\r\n\r\n  const elements = data.map(({ id, image, title, price, type, technology, oar, handle, thickness, length, width }: IItem, index: number) => (\r\n    <div className=\"large-bricks__item\" key={index}>\r\n\r\n      <div className=\"large-bricks__compare\">\r\n        <span className=\"large-bricks__compare--icon\">\r\n          <FontAwesomeIcon icon={faBalanceScale} />\r\n        </span>\r\n      </div>\r\n      <Link to={`sup/${id}`} className=\"larg-bricks__link\">\r\n        <img className=\"large-bricks__image\" src={`./assets/${image}`} alt=\"\" />\r\n      </Link>\r\n\r\n  <span className=\"large-bricks__title\">{title}</span>\r\n\r\n      <div className=\"large-bricks__desc\">\r\n        <div className=\"large-bricks__short-stats\">\r\n          <p className=\"large-bricks__short-stats--p\">Rodzaj: {type}</p>\r\n          <p className=\"large-bricks__short-stats--p\">Technologia: {technology}</p>\r\n          <p className=\"large-bricks__short-stats--p\">Wiosło w zestawie: {oar}</p>\r\n          <p className=\"large-bricks__short-stats--p\">Uchwyt na siedzisko: {handle}</p>\r\n          <p className=\"large-bricks__short-stats--p\">Grubość: {thickness}</p>\r\n          <p className=\"large-bricks__short-stats--p\">Długość: {length}</p>\r\n          <p className=\"large-bricks__short-stats--p\">Szerokość: {width}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"large-bricks__price\"><span>Cena {price} zł</span></div>\r\n\r\n      <span className=\"large-bricks__cart\" onClick={() => new DataOperations().addToCart(id)}><FontAwesomeIcon icon={faCartPlus} /></span>\r\n\r\n    </div>\r\n  ));\r\n  console.log('elements ', elements);\r\n\r\n  return (\r\n    <div className=\"large-bricks\">\r\n      {elements}\r\n    </div>);\r\n}\r\n\r\nexport default LargeBricksView;","import React from 'react';\r\nimport './SmallBricksView.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport { IGpusModel, IItem } from './sup.model';\r\n\r\ntype ViewProps = {\r\n  data: IItem[]\r\n}\r\n\r\nconst SmallBricksView = ({data}: ViewProps): JSX.Element => {\r\n\r\n  // const items = data.map(({id, image, title, price, gpumodel, vram, memorytype, connectors}: IItem, index) => (\r\n  //       <div className=\"small-bricks__item\" key={index}>\r\n\r\n  //         <div className=\"small-bricks__image--container\">\r\n  //           <div className=\"small-bricks__checkbox--container\"><input type=\"checkbox\" className=\"small-bricks__checkbox\"/> do porównania</div>\r\n  //           <Link to={`search/${id}`}><img className=\"small-bricks__image\" src={image} alt=\"\"/></Link>\r\n  //         </div>\r\n\r\n  //         <div className=\"small-bricks__short-desc\">\r\n  //           <Link to=\"./\" className=\"small-bricks__title\">{title}</Link>\r\n  //           <div className=\"small-bricks__short-stats\">\r\n  //           <p className=\"large-bricks__short-stats--p\">Układ: {gpumodel}</p>\r\n  //           <p className=\"large-bricks__short-stats--p\">Pamięć: {vram}</p>\r\n  //           <p className=\"large-bricks__short-stats--p\">Rodzaj pamięci: {memorytype}</p>\r\n  //           <p className=\"large-bricks__short-stats--p\">Złącza: {connectors}</p>\r\n  //           </div>\r\n  //         </div>\r\n          \r\n  //         <div className=\"small-bricks__price\">{price} zł</div>\r\n  //       </div>\r\n  // ));\r\n  return (\r\n    <div className=\"small-bricks\">\r\n      {/* {items} */}\r\n    </div>);\r\n}\r\n  \r\nexport default SmallBricksView;","import React from 'react';\r\nimport './LargeListView.scss';\r\nimport {IGpusModel, IItem} from './sup.model';\r\nimport { Link } from 'react-router-dom';\r\n\r\ntype ViewProps = {\r\n  data: IItem[]\r\n}\r\n\r\nconst LargeListView = ({data}: ViewProps): JSX.Element => {\r\n\r\n  // const items = data.map(({id, image, title, price, gpumodel, vram, memorytype, connectors}: IItem, index) => (\r\n  //   <div className=\"large-list__item\" key={index}>\r\n\r\n  //     <div className=\"large-list__image--container\">\r\n  //       <Link to={`search/${id}`} className=\"large-list__link\"><img src={image} className=\"large-list__image\" alt=\"\"/></Link>\r\n  //     </div>\r\n\r\n  //     <div className=\"large-list__short-desc\">\r\n  //       <div className=\"large-list__title\"><Link to=\"./\">{title}</Link></div>\r\n  //       <div className=\"large-list__short-stats\">\r\n  //           Układ: {gpumodel} Pamięć: {vram} Rodzaj pamięci: {memorytype} Złącza: {connectors}\r\n  //       </div>\r\n  //     </div>\r\n\r\n  //     <div className=\"large-list__checkbox--container\"><input type=\"checkbox\" className=\"large-list__checkbox\"/> do porównania</div>\r\n\r\n  //     <div className=\"large-list__price\"><span className=\"large-list__price--span\">{price} zł</span></div>\r\n  //   </div>\r\n  // ));\r\n\r\n  return (\r\n    <div className=\"large-list\">\r\n      {/* {items} */}\r\n    </div>);\r\n}\r\n\r\nexport default LargeListView;","import React from 'react';\r\nimport './SmallListView.scss';\r\nimport { IGpusModel, IItem } from './sup.model';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faImage } from '@fortawesome/free-regular-svg-icons';\r\nimport { faBalanceScale, faCartPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\ntype ViewProps = {\r\n  data: IItem[]\r\n}\r\n\r\nconst SmallListView = ({data}: ViewProps): JSX.Element => {\r\n  // console.log(\"SMALL LIST DATA\", data);\r\n\r\n  // const items = data.map(({id, image, title, shortStats, price, gpumodel, vram, memorytype, connectors}: IItem, index) => (\r\n  //   <Link to={`search/${id}`} className=\"small-list__item\" key={index}>\r\n  //     <div className=\"small-list__image--container\">\r\n  //       <FontAwesomeIcon icon={faImage} />\r\n  //       <img src={image} className=\"small-list__hover-image\" alt=\"\"/>\r\n  //     </div>\r\n  \r\n  //     <h5 className=\"small-list__title\">{title}</h5>\r\n\r\n  //     <span className=\"small-list__short-stats\">{shortStats}</span>\r\n  \r\n  //     <div className=\"small-list__compare\">\r\n  //       <span className=\"small-list__compare--icon\">\r\n  //         <FontAwesomeIcon icon={faBalanceScale}/>\r\n  //       </span>\r\n  //     </div>\r\n\r\n  //     <div className=\"small-list__cart\">\r\n  //       <span className=\"small-list__cart--icon\">\r\n  //         <FontAwesomeIcon icon={faCartPlus}/>\r\n  //       </span>\r\n  //     </div>\r\n  \r\n  // <div className=\"small-list__price\">{price} zł</div>\r\n  //   </Link>\r\n  // ));\r\n  \r\n  return (\r\n    <div className=\"small-list\">\r\n      {/* {items} */}\r\n    </div>);\r\n}\r\n\r\nexport default SmallListView;\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport Filter from '../filter/Filter';\r\nimport './ItemsList.scss';\r\n\r\nimport LargeBricksView from './views/LargeBricksView';\r\nimport SmallBricksView from './views/SmallBricksView';\r\nimport LargeListView from './views/LargeListView';\r\nimport SmallListView from './views/SmallListView';\r\nimport DataOperations from '../filter/DataOperations';\r\nimport { IItem } from './views/sup.model';\r\n\r\ninterface ItemsListState {\r\n  data: IItem[];\r\n  view: number;\r\n  dataOperations: DataOperations;\r\n}\r\n\r\nexport default class ItemsList extends Component<{}, ItemsListState> {\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      view: 1,\r\n      dataOperations: new DataOperations(),\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    this.setState(() => ({ dataOperations: new DataOperations()}));\r\n\r\n    const promisedData = this.state.dataOperations.getFullData();\r\n    promisedData.then((data) => {\r\n\r\n      this.setState(() =>\r\n        ({ data: data })\r\n      );\r\n\r\n    })\r\n  }\r\n\r\n  changeView = (choice: number): JSX.Element => {\r\n    let newView = (<div></div>);\r\n    switch (choice) {\r\n      case 1: newView = (<LargeBricksView data={this.state.data} />);\r\n        break;\r\n      case 2: newView = (<SmallBricksView data={this.state.data} />);\r\n        break;\r\n      case 3: newView = (<LargeListView data={this.state.data} />);\r\n        break;\r\n      case 4: newView = (<SmallListView data={this.state.data} />);\r\n        break;\r\n    }\r\n    return newView;\r\n  }\r\n\r\n  changeFilteredData = (filter: any): void => {\r\n    // let newFilteredData = JSON.parse(JSON.stringify(this.state.data));\r\n    // newFilteredData.items = this.state.dataOps.setFilteredData(this.state.data, filter);\r\n    // this.setState(() => ({filteredData: newFilteredData}));\r\n    //  console.log(\"FILTERED\", this.state.filteredData);\r\n  }\r\n\r\n  render(): JSX.Element {\r\n    console.log('ItemsList data ', this.state.data);\r\n    return (\r\n      <div className=\"shop-content\">\r\n        {/* <Filter data={this.state.data} changeFilteredData={this.changeFilteredData}/> */}\r\n\r\n\r\n        <div className=\"items-list\">\r\n          <div className=\"items-list__change-view--container\">\r\n            <div className=\"items-list__change-view--btn largeBricks\" onClick={() => this.setState(() => ({ view: 1 }))}></div>\r\n            <div className=\"items-list__change-view--btn smallBricks\" onClick={() => this.setState(() => ({ view: 2 }))}></div>\r\n            <div className=\"items-list__change-view--btn largeList\" onClick={() => this.setState(() => ({ view: 3 }))}></div>\r\n            <div className=\"items-list__change-view--btn smallList\" onClick={() => this.setState(() => ({ view: 4 }))}></div>\r\n          </div>\r\n          {this.changeView(this.state.view)}\r\n        </div>\r\n      </div>\r\n    )\r\n  };\r\n}","import React from 'react';\r\nimport DataOperations from '../content/filter/DataOperations';\r\nimport { IItem } from '../content/sup-shop/views/sup.model';\r\nimport './PanelAddProd.scss';\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\ninterface IState {\r\n    item: IItem,\r\n}\r\n\r\nexport default class PanelAddProd extends React.Component<IProps, IState>{\r\n\r\n    constructor(props: IProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            item: {\r\n                id: '',\r\n                title: '',\r\n                description: '',\r\n                qty: 0,\r\n                sentTime: '',\r\n                price: 0,\r\n                guarantee: '',\r\n                image: '',\r\n                producer: '',\r\n                type: '',\r\n                technology: '',\r\n                purpose: '',\r\n                oar: '',\r\n                handle: '',\r\n                thickness: '',\r\n                length: '',\r\n                width: '',\r\n            },\r\n        }\r\n    }\r\n\r\n    componentDidMount() {}\r\n\r\n    createInputs(){\r\n        let newInputs: JSX.Element[] = [];\r\n        let key: string;\r\n        for (key in this.state.item) {\r\n            console.log('Input item[key]', this.state.item[key]);\r\n            newInputs.push(<input type=\"text\" onChange={(e) => this.updateInput(e)}\r\n                key={newInputs.length}\r\n                placeholder={key}\r\n                className={`panel__add-input panel__add--${key}`}\r\n                name={key}\r\n                value={this.state.item[key]} />);\r\n        }\r\n        return newInputs;\r\n    }\r\n\r\n    updateInput = (e: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n\r\n        const key = e.currentTarget.name;\r\n\r\n        document.querySelector(`.panel__add--${key}`)?.classList.remove('required');\r\n\r\n        let newItem: IItem = this.state.item;\r\n        console.log('State item ', key, this.state.item);\r\n        newItem[key] = e.currentTarget.value;\r\n        console.log('newItem ', newItem);\r\n        this.setState(() => ({\r\n            item: newItem\r\n        }));\r\n    }\r\n\r\n    addProduct = async (e: React.FormEvent<HTMLInputElement>) => {\r\n        e.preventDefault();\r\n\r\n        for(const key in this.state.item){\r\n            if(this.state.item[key] === ''){\r\n                document.querySelector(`.panel__add--${key}`)?.classList.add('required');\r\n            }\r\n        }\r\n\r\n        console.log(\"Add product.\");\r\n        const dataOps = new DataOperations();\r\n        dataOps.addProduct(this.state.item);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"panel__add-prod\">\r\n                <div className=\"panel__add-prod--title\">\r\n                    Add product\r\n            </div>\r\n                <form className=\"panel__add-prod--form\">\r\n\r\n                    {this.createInputs()}\r\n                    <input onClick={this.addProduct} type=\"button\" className=\"panel__add-prod--submit panel__add-prod--input\" value=\"Add\" />\r\n\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport DataOperations from '../content/filter/DataOperations';\r\nimport { IItem } from '../content/sup-shop/views/sup.model';\r\nimport './PanelEditProd.scss';\r\n\r\ninterface IProps {\r\n    item: IItem,\r\n    match: {\r\n        isExact: boolean,\r\n        params: {\r\n            id: string\r\n        },\r\n    },\r\n}\r\n\r\ninterface IState {\r\n    currItem: IItem,\r\n}\r\n\r\nexport default class PanelEditProd extends React.Component<IProps, IState>{\r\n\r\n    constructor(props: IProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            currItem: {\r\n                id: 'string',\r\n                title: 'string',\r\n                description: 'string',\r\n                qty: 0,\r\n                sentTime: 'string',\r\n                price: 0,\r\n                guarantee: 'string',\r\n                image: 'string',\r\n                producer: 'string',\r\n                type: 'string',\r\n                technology: 'string',\r\n                purpose: 'string',\r\n                oar: 'string',\r\n                handle: 'string',\r\n                thickness: 'string',\r\n                length: 'string',\r\n                width: 'string',\r\n            },\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const dataOps = new DataOperations();\r\n        const item = await dataOps.getItem(this.props.match.params.id);\r\n        this.setState({ currItem: item });\r\n    }\r\n\r\n    createInputs = (): JSX.Element[] => {\r\n        let newInputs: JSX.Element[] = [];\r\n        let key: string;\r\n        for (key in this.state.currItem) {\r\n            newInputs.push(<input type=\"text\" onChange={(e) => this.updateInput(e)}\r\n                key={newInputs.length}\r\n                placeholder={key}\r\n                className={`panel__edit-input panel__add--${key}`}\r\n                name={key}\r\n                value={this.state.currItem[key]} />);\r\n        }\r\n        return newInputs;\r\n    }\r\n\r\n    updateInput = (e: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n\r\n        const key = e.currentTarget.name;\r\n\r\n        document.querySelector(`.panel__add--${key}`)?.classList.remove('required');\r\n\r\n        let newItem: IItem = this.state.currItem;\r\n        console.log('State item ', key, this.state.currItem);\r\n        newItem[key] = e.currentTarget.value;\r\n        console.log('newItem ', newItem);\r\n        this.setState(() => ({\r\n            currItem: newItem\r\n        }));\r\n    }\r\n\r\n    changeProduct = async (e: React.FormEvent<HTMLInputElement>) => {\r\n        e.preventDefault();\r\n        const newItem: IItem = { ...this.state.currItem };\r\n        const dataOps = new DataOperations();\r\n        dataOps.editProduct(newItem);\r\n    }\r\n\r\n    render() {\r\n        // console.log(this.state.currItem);\r\n        return (\r\n            <div className=\"panel__edit-prod\">\r\n                <div className=\"panel__edit-prod--title\">\r\n                    Edit product\r\n            </div>\r\n                <form className=\"panel__edit-prod--form\">\r\n\r\n                    {this.createInputs()}\r\n\r\n                    {/* <input onChange={this.updateInput} name=\"name\" value={this.state.currItem.title} type=\"text\" className=\"panel__add-prod--name panel__add-prod--input\" placeholder=\"Name\" />\r\n                    <textarea onChange={this.updateInput} name=\"description\" value={this.state.currItem.description} className=\"panel__add-prod--desc panel__add-prod--input\" rows={4} placeholder=\"Description\"></textarea>\r\n                    <input onChange={this.updateInput} name=\"shortStats\" value={this.state.currItem.shortStats} type=\"text\" className=\"panel__add-prod--short-stats panel__add-prod--input\" placeholder=\"Short stats\" />\r\n                    <input onChange={this.updateInput} name=\"vram\" value={this.state.currItem.vram} type=\"text\" className=\"panel__add-prod--vram panel__add-prod--input\" placeholder=\"Vram\" />\r\n                    <input onChange={this.updateInput} name=\"image\" value={this.state.currItem.image} type=\"text\" className=\"panel__add-prod--image panel__add-prod--input\" placeholder=\"Image\" />\r\n                    <input onChange={this.updateInput} name=\"model\" value={this.state.currItem.gpumodel} type=\"text\" className=\"panel__add-prod--model panel__add-prod--input\" placeholder=\"Model\" />\r\n                    <input onChange={this.updateInput} name=\"producer\" value={this.state.currItem.producer} type=\"text\" className=\"panel__add-prod--producer panel__add-prod--input\" placeholder=\"Producer\" />\r\n                    <input onChange={this.updateInput} name=\"memorytype\" value={this.state.currItem.memorytype} type=\"text\" className=\"panel__add-prod--memorytype panel__add-prod--input\" placeholder=\"Memory type\" />\r\n                    <input onChange={this.updateInput} name=\"connectors\" value={this.state.currItem.connectors} type=\"text\" className=\"panel__add-prod--connectors panel__add-prod--input\" placeholder=\"Connectors\" />\r\n                    <input onChange={this.updateInput} name=\"shortStats\" value={this.state.currItem.shortStats} type=\"text\" className=\"panel__add-prod--price panel__add-prod--input\" placeholder=\"Price\" /> */}\r\n\r\n                    <input onClick={this.changeProduct} type=\"button\" className=\"panel__edit-prod--submit panel__edit-prod--input\" value=\"Change\" />\r\n\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport DataOperations from '../content/filter/DataOperations';\r\nimport { IItem } from '../content/sup-shop/views/sup.model';\r\nimport './PanelProdsList.scss';\r\n\r\ninterface IProps { }\r\n\r\ninterface IState {\r\n    items: JSX.Element[],\r\n    dataOps: DataOperations,\r\n}\r\n\r\nexport default class PanelProdsList extends React.Component<IProps, IState>{\r\n\r\n    constructor(props: IProps) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            items: [],\r\n            dataOps: new DataOperations()\r\n        }\r\n    }\r\n\r\n    removeItem(id: string, index: number){\r\n        const dataOps = new DataOperations();\r\n        dataOps.deleteItem(id)\r\n        .then((response) => {\r\n            console.log('response', response);\r\n            const newItems = this.state.items.filter(({key}) => key !== String(index))\r\n            this.setState({ items: newItems });\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.state.dataOps.getFullData()\r\n            .then((data) => this.setState(() => ({\r\n                items: data.map(({ id, title, description, price }, index) => (\r\n                    <div className=\"panel__prods-list--item\" key={index}>\r\n                        <span className=\"panel__prods-list--title\">{title}</span>\r\n                        <span className=\"panel__prods-list--description\">{description}</span>\r\n                        <span className=\"panel__prods-list--price\">{price}</span>\r\n                        <Link to={`/panel/edit/${id}`} className=\"panel__prods-list--edit\">Edit</Link>\r\n                        <span className=\"panel__prods-list--delete\" onClick={() => this.removeItem(id, index)}>Del</span>\r\n                    </div>\r\n                ))\r\n            })));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"panel__prods-list\">\r\n                {this.state.items}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport './PanelMenu.scss';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst PanelMenu = () => {\r\n    return (\r\n        <nav className=\"panel__menu\">\r\n        <NavLink to=\"/panel/list\" className=\"panel__link\" activeClassName=\"active\">Products list</NavLink>\r\n            <NavLink to=\"/panel/add\" className=\"panel__link\" activeClassName=\"active\">Add product</NavLink>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default PanelMenu;","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport './Panel.scss';\r\nimport PanelAddProd from './PanelAddProd';\r\nimport PanelEditProd from './PanelEditProd';\r\nimport PanelProdsList from './PanelProdsList';\r\n\r\nimport PanelMenu from './PanelMenu';\r\n\r\nexport const Panel = () => {\r\n    return (\r\n        <section className=\"panel\">\r\n            <PanelMenu/>\r\n\r\n            <Switch>\r\n                <Route path=\"/panel/list\" component={PanelProdsList}/>\r\n                <Route path=\"/panel/add\" component={PanelAddProd}/>\r\n                <Route path=\"/panel/edit/:id\" component={PanelEditProd}/>\r\n            </Switch>\r\n        </section>\r\n    )\r\n}\r\nexport default Panel;","import React, { Component } from 'react';\r\nimport './Cart.scss';\r\nimport DataOperations from '../../filter/DataOperations';\r\nimport { IItem } from '../views/sup.model';\r\n\r\ninterface IProps {\r\n\r\n}\r\n\r\ninterface IState {\r\n    itemIds: string[],\r\n    cartItems: JSX.Element[],\r\n}\r\n\r\nexport default class Cart extends Component<IProps, IState> {\r\n\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.state = {\r\n            itemIds: [],\r\n            cartItems: [],\r\n        }\r\n    }\r\n\r\n    removeFromCart(id: string) {\r\n        const newString: any = localStorage.getItem('cartItems')?.replaceAll(id, '');\r\n        localStorage.setItem('cartItems', newString);\r\n        this.setCartItems();\r\n    }\r\n\r\n    setCartItems = () => {\r\n        const dataOps = new DataOperations();\r\n        let items: IItem[] = [];\r\n        localStorage.getItem('cartItems')?.split(' ').map((itemId) => {\r\n            // if(localStorage.getItem(`cartItem${i}`))\r\n            // itemId = localStorage.getItem(`cartItem${i}`);\r\n            if (itemId.length < 1 || itemId.includes('null')) {\r\n                return;\r\n            }\r\n            else {\r\n                dataOps.getItem(itemId)\r\n                    .then((item) => {\r\n                        items.push(item);\r\n                        return items;\r\n                    })\r\n                    .then(data => {\r\n                        const newCartItems = data.map(({ id, title, description, qty, price }, index) => {\r\n                            return (\r\n                                <div className=\"cart__item\" key={index}>\r\n                                    <span className=\"cart__title\">{title}</span>\r\n                                    <span className=\"cart__description\">{description}</span>\r\n                                    input:text.\r\n                                    <span className=\"cart__price\">{price} zł</span>\r\n                                    <span className=\"cart__remove\" onClick={() => this.removeFromCart(id)}>Remove</span>\r\n                                </div>\r\n                            )\r\n                        }\r\n                        );\r\n                        this.setState(() => ({ cartItems: newCartItems }));\r\n                    });\r\n            }\r\n        })\r\n\r\n        return items;\r\n    }\r\n\r\n    cleanCart() {\r\n        localStorage.clear();\r\n        this.setState(() => ({ cartItems: [] }));\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        this.setCartItems();\r\n    }\r\n\r\n    render() {\r\n        console.log(\"State item \", this.state.cartItems);\r\n        return (\r\n            <div className=\"cart\" >\r\n                {this.state.cartItems}\r\n                {this.state.cartItems.length ? (<span className=\"cart__remove-all\" onClick={() => this.cleanCart()}>Remove all</span>) :\r\n                (<span className=\"cart__empty\">Your cart is empty</span>)}\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\r\n\r\ntype TProps = {\r\n    technicals: {\r\n        type: string,\r\n        technology: string,\r\n        oar: string,\r\n        handle: string,\r\n        thickness: string,\r\n        length: string,\r\n        width: string,\r\n    }\r\n}\r\n\r\ntype DProps = {\r\n    description: string\r\n}\r\n\r\ntype SProps = {\r\n    shipment: string\r\n}\r\n\r\nexport const ItemViewInfo = ({ description }: DProps) => {\r\n\r\n    return (\r\n        <div className=\"item-view__tab--info item-view__tab\">\r\n            {description}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const ItemViewTechnicals = ({technicals}: TProps) => {\r\n\r\n    return (\r\n        <div className=\"item-view__tab--technicals item-view__tab\">\r\n            <div className=\"item-view__short-stats--div\">\r\n                <span className=\"short-stats--title\">Rodzaj:</span>\r\n                <span className=\"short-stats--info\">{technicals.type}</span>\r\n            </div>\r\n            <div className=\"item-view__short-stats--div\">\r\n                <span className=\"short-stats--title\">Technologia:</span>\r\n                <span className=\"short-stats--info\">{technicals.technology}</span>\r\n            </div>\r\n            <div className=\"item-view__short-stats--div\">\r\n                <span className=\"short-stats--title\">Wiosło w zestawie:</span>\r\n                <span className=\"short-stats--info\">{technicals.oar}</span>\r\n            </div>\r\n            <div className=\"item-view__short-stats--div\">\r\n                <span className=\"short-stats--title\">Uchwyt na siedzisko:</span>\r\n                <span className=\"short-stats--info\">{technicals.handle}</span>\r\n            </div>\r\n            <div className=\"item-view__short-stats--div\">\r\n                <span className=\"short-stats--title\">Grubość:</span>\r\n                <span className=\"short-stats--info\">{technicals.thickness}</span>\r\n            </div>\r\n            <div className=\"item-view__short-stats--div\">\r\n                <span className=\"short-stats--title\">Długość:</span>\r\n                <span className=\"short-stats--info\">{technicals.length}</span>\r\n            </div>\r\n            <div className=\"item-view__short-stats--div\">\r\n                <span className=\"short-stats--title\">Szerokość:</span>\r\n                <span className=\"short-stats--info\">{technicals.width}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport const ItemViewOpinions = () => {\r\n\r\n    return (\r\n        <div className=\"item-view__tab--opinions item-view__tab\">\r\n            ItemViewOpinions\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport const ItemViewPayment = () => {\r\n\r\n    return (\r\n        <div className=\"item-view__tab--payment item-view__tab\">\r\n            ItemViewPayment\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport const ItemViewShipment = ({ shipment}: SProps) => {\r\n\r\n    return (\r\n        <div className=\"item-view__tab--shipment item-view__tab\">\r\n            {shipment}\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from 'react';\r\nimport './ItemView.scss';\r\nimport { Link, Route, Switch } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBalanceScale, faCartPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport DataOperations from '../filter/DataOperations';\r\nimport { IItem } from './views/sup.model';\r\nimport { ItemViewInfo, ItemViewOpinions, ItemViewPayment, ItemViewShipment, ItemViewTechnicals } from './itemViewTabs';\r\n\r\ninterface IProps {\r\n  _id: string,\r\n  match: {\r\n    isExact: boolean,\r\n    params: {\r\n      id: string\r\n    },\r\n  },\r\n}\r\n\r\ninterface IState {\r\n  item: IItem\r\n}\r\n\r\nexport default class ItemView extends Component<IProps, IState> {\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      item: {\r\n        id: 'string',\r\n        title: 'string',\r\n        description: 'string',\r\n        qty: 0,\r\n        sentTime: 'string',\r\n        price: 0,\r\n        guarantee: 'string',\r\n        image: 'string',\r\n        producer: 'string',\r\n        type: 'string',\r\n        technology: 'string',\r\n        purpose: 'string',\r\n        oar: 'string',\r\n        handle: 'string',\r\n        thickness: 'string',\r\n        length: 'string',\r\n        width: 'string',\r\n      }\r\n    }\r\n    // console.log(\"didMount data \", this.state.data);\r\n  }\r\n  componentDidMount() {\r\n\r\n    console.log(\"match\", this.props.match);\r\n\r\n    const dataOps = new DataOperations();\r\n\r\n    const promisedItem = dataOps.getItem(this.props.match.params.id);\r\n    promisedItem.then((item) => {\r\n\r\n      this.setState(() =>\r\n        ({ item: item })\r\n      );\r\n\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"item-view\">\r\n\r\n        <div className=\"item-view__compare\">\r\n          <span className=\"item-view__compare--icon\">\r\n            <FontAwesomeIcon icon={faBalanceScale} />\r\n          </span>\r\n        </div>\r\n\r\n        <img className=\"item-view__image\" src={`./assets/${this.state.item.image}`} alt=\"\" />\r\n\r\n        <div className=\"item-view__short-stats\">\r\n\r\n          <p className=\"item-view__title\">{this.state.item.title}</p>\r\n\r\n          <p className=\"item-view__desc\">{this.state.item.description}</p>\r\n\r\n          <div className=\"item-view__short-stats--div\">\r\n            <div className=\"item-view__price\"><span>Cena {this.state.item.price} zł</span></div>\r\n          </div>\r\n\r\n          <div className=\"item-view__short-stats--div\">\r\n            <span className=\"item-view__cart--icon\" onClick={() => new DataOperations().addToCart(this.state.item.id)}><FontAwesomeIcon icon={faCartPlus} /></span><span className=\"item-view__cart--title\">Zarezerwuj</span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"item-view__fullinfo\">\r\n\r\n          <div className=\"item-view__infotabs\">\r\n            <Link to={`/sup/${this.state.item.id}/info`} className=\"item-view__infotab\">OPIS PRODUKTU</Link>\r\n            <Link to={`/sup/${this.state.item.id}/technicals`} className=\"item-view__infotab\">DANE TECHNICZNE</Link>\r\n            <Link to={`/sup/${this.state.item.id}/opinions`} className=\"item-view__infotab\">OPINIE KLIENTÓW</Link>\r\n            <Link to={`/sup/${this.state.item.id}/payment`} className=\"item-view__infotab\">PŁATNOŚCI</Link>\r\n            <Link to={`/sup/${this.state.item.id}/shipment`} className=\"item-view__infotab\">WYSYŁKA</Link>\r\n          </div>\r\n\r\n          <div className=\"item-view__infotab--content\">\r\n\r\n            <Switch>\r\n\r\n              <Route exact path=\"/sup/:id/info\">\r\n                <ItemViewInfo description={this.state.item.description}/>\r\n              </Route>\r\n\r\n              <Route path=\"/sup/:id/technicals\">\r\n                <ItemViewTechnicals technicals={{\r\n                  type: this.state.item.type,\r\n                  technology: this.state.item.technology,\r\n                  oar: this.state.item.oar,\r\n                  handle: this.state.item.handle,\r\n                  thickness: this.state.item.thickness,\r\n                  length: this.state.item.length,\r\n                  width: this.state.item.width,\r\n                }}/>\r\n              </Route>\r\n              <Route path=\"/sup/:id/opinions\">\r\n                <ItemViewOpinions/>\r\n              </Route>\r\n              <Route path=\"/sup/:id/payment\">\r\n                <ItemViewPayment/>\r\n              </Route>\r\n              <Route path=\"/sup/:id/shipment\">\r\n                <ItemViewShipment shipment={this.state.item.sentTime}/>\r\n              </Route>\r\n              \r\n            </Switch>\r\n\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>);\r\n  }\r\n}","import React from 'react';\nimport './App.scss';\n\nimport Header from './components/header/Header';\nimport Promotions from './components/promotions/Promotions';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  useParams\n} from \"react-router-dom\";\nimport ItemsList from './components/content/sup-shop/ItemsList';\nimport Panel from './components/panel/Panel';\nimport Cart from './components/content/sup-shop/cart/Cart';\nimport ItemView from './components/content/sup-shop/ItemView';\n\ninterface IParams{\n  params: {\n    id: number;\n  }\n}\n\nconst App: React.FC = () => {\n\n  return (\n      <div className=\"App\">\n            <Header/> \n\n            <main className=\"app__content\">\n              <div className=\"gray-cover\"></div>\n              <Switch>\n                <Route path=\"/sup\" exact component={ItemsList}/>\n                <Route path=\"/sup/:id\" component={ItemView} />\n                <Route path=\"/panel\" component={Panel}/>\n                <Route path=\"/cart\" component={Cart}/>\n              </Switch>\n                {/* <Route path=\"/\">\n                  <Promotions/>\n                </Route>\n                <Route path=\"/\">\n                  <ItemsList/>\n                </Route>\n                <Route path=\"/panel\">\n                  <Panel/>\n                </Route> */}\n            </main>\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <HashRouter>\n        <App />\n      </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}